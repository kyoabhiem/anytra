name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
            name: anytra-linux-x64
            extension: ''
          - target: x86_64-pc-windows-gnu
            os: ubuntu-22.04
            name: anytra-windows-x64
            extension: '.exe'
          - target: x86_64-apple-darwin
            os: macos-13
            name: anytra-macos-intel
            extension: ''
          - target: aarch64-apple-darwin
            os: macos-14
            name: anytra-macos-apple-silicon
            extension: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cross-compilation tools (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create release archive
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            7z a ../../../${{ matrix.name }}.zip anytra${{ matrix.extension }}
          else
            tar -czf ../../../${{ matrix.name }}.tar.gz anytra${{ matrix.extension }}
          fi
        shell: bash

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Get release version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
